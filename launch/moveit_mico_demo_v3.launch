<!-- Do not launch in virtualenv -->
<!-- fake_mask_generator & fake_kinect2 should be open in virtualenv 'mask_rcnn'  -->

<launch>
  <!-- arguments -->
  <!-- <arg name="interested_object" default="orange" /> -->
  <arg name="is_use_rviz_demo" default="true" />
  <arg name="is_use_gazebo_sim" default="false" />
  <!-- <arg name="is_discard_cloud_obstacle" default="false" /> -->
  <arg name="is_pose_goal_fixed" default="false" />
  <arg name="grasp_detection_topic" default="/detect_grasps/clustered_grasps" />
  <arg name="is_filter_pointcloud" default="true" />
  <arg name="is_use_GPD" default="true" />
  
  <!-- **************************************** -->

  <!-- Frames setup -->
  <node name="to_mico_base" pkg="tf2_ros" type="static_transform_publisher" args="0 0 0 0 0 0 1 mdworld world" />
  <node name="to_camera_frame" pkg="tf2_ros" type="static_transform_publisher" args="0 0.1 0.4 0 3.1415926 1.0 mdworld camera_frame" />

  <!-- coordinator node -->
  <node name="unknown_pick_coordinator" pkg="unknown_pick" type="coordinator.py" />

  <!-- MoveIt! RViz demo -->
  <include file="$(find moveit_generated)/launch/demo.launch" if="$(arg is_use_rviz_demo)" />
  <!-- Gazebo Sim and Rviz -->
  <include file="$(find mico_interaction)/launch/mico_moveit_sim.launch" if="$(arg is_use_gazebo_sim)" />

  <!-- segment cloud -->
  <node name="cloud_segmentor" pkg="unknown_pick" type="segment_cloud_v3" output="screen">
    <!-- <remap from="/cloud_obstacle" to="/cloud_whatever" if="$(arg is_discard_cloud_obstacle)" /> -->
    <remap from="/cloud_object" to="/cloud_object/unfiltered" if="$(arg is_filter_pointcloud)" />
    <remap from="/cloud_obstacle" to="/cloud_obstacle/unfiltered" if="$(arg is_filter_pointcloud)" />
  </node>

  <!-- pcl filter nodelets -->
  <include file="$(find unknown_pick)/launch/pcl_filter.launch" if="$(arg is_filter_pointcloud)" >
  </include>

  <!-- GPD package - generate suitable grasps -->
  <include file="$(find unknown_pick)/launch/grasp_detector.launch" >
    <arg name="cloud_topic" default="/cloud_object_whatever" unless="$(arg is_use_GPD)" />
  </include> 

  <!-- pose goal generator - convert GPD format into a pose -->
  <node name="pose_goal_generator" pkg="unknown_pick" type="pose_goal_generator.py" >
    <param name="is_pose_goal_fixed" value="$(arg is_pose_goal_fixed)" />
    <param name="grasp_detection_topic" value="$(arg grasp_detection_topic)" />
  </node>

  <!-- Use MoveIt! command to config robot arm -->
  <node name="moveit_grasp" pkg="unknown_pick" type="moveit_grasp.py" output="screen"/>

</launch>
